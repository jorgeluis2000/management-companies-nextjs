// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique @default(uuid())
  idAuthZero   String        @default("")
  email        String        @unique
  name         String
  phone        String?       @default("")
  password     String
  image        String?       @default("")
  idUserConfig String
  userConfig   UserConfig    @relation(fields: [idUserConfig], references: [id])
  role         Role          @default(USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

model UserConfig {
  id           String    @id @unique @default(uuid())
  codeLanguage String
  language     Language  @relation(fields: [codeLanguage], references: [code])
  codeTimezone String
  timeZone     TimeZone  @relation(fields: [codeTimezone], references: [zone])
  users        User[]
  theme        UserTheme @default(LIGHT)
}

model TimeZone {
  zone       String       @id @unique
  utcOffset  String
  userConfig UserConfig[]
}

model Language {
  code        String       @id @unique
  name        String
  usersConfig UserConfig[]
}

enum Role {
  ADMIN
  USER
}

enum UserTheme {
  DARK
  LIGHT
  AUTO
}

// Parte de logica de negocios

model Transaction {
  id              String          @id @unique @default(uuid())
  concept         String
  amount          Float
  typeTransaction TypeTransaction
  idUser          String
  user            User            @relation(fields: [idUser], references: [id])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

enum TypeTransaction {
  INCOME
  EXPENSE
}
